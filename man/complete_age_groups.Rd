% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/age.R
\name{complete_age_groups}
\alias{complete_age_groups}
\title{Complete Age Groups}
\usage{
complete_age_groups(data, age_gt = NULL, age_lt = NULL, ...,
  age_group = age_group, fill = list(n = 0), include_unknown = FALSE,
  std_age_groups = fcds_const("age_group"))
}
\arguments{
\item{data}{A data frame.}

\item{age_gt}{Youngest age (inclusive).}

\item{age_lt}{Eldest age (inclusive).}

\item{...}{Not used other than to require explicit naming of arguments.}

\item{age_group}{Unquoted column name containing the age grouping.}

\item{fill}{A named list that for each variable supplies a single value to
use instead of \code{NA} for missing combinations.}

\item{include_unknown}{Should the "Unknown" age group be included?}

\item{std_age_groups}{Character vector containing expected (or standard) age
groups.}
}
\description{
Completes age groups by adding missing age groups, either within the age
range from \code{age_gt} to \code{age_lt} or using the full age list from
\link{seer_std_ages}. If the columns \code{age_min} or \code{age_max} are missing from the
input data, \code{\link[=separate_age_groups]{separate_age_groups()}} is first called to expand the age group
variable.
}
\examples{
dplyr::tibble(
  age_group = c("10 - 14", "15 - 19", "25 - 29"),
  n = 10:12
) \%>\%
  complete_age_groups(10, 35)

}
\seealso{
Other age processors: \code{\link{filter_age_groups}},
  \code{\link{separate_age_groups}},
  \code{\link{standardize_age_groups}}
}
\concept{age processors}
