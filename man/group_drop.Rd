% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{group_drop}
\alias{group_drop}
\title{Remove a Grouping Column from Groups}
\usage{
group_drop(.data, ..., .remove_dropped = FALSE)
}
\arguments{
\item{.data}{A grouped tbl, tibble, or data.frame}

\item{...}{Quoted or unquoted column names to be removed from the grouping}

\item{.remove_dropped}{Should columns that are dropped from the grouping also
be removed from \code{.data}? Default is \code{FALSE}.}
}
\description{
Removes columns from the current list of groups, with the additional option
to remove the columns from the data completely. In essence, the opposite of
\code{\link[dplyr:group_by]{dplyr::group_by()}} with \code{add = TRUE}.
}
\examples{
Remove "type" from the groups
tidyr::table2 \%>\%
  dplyr::group_by(country, year, type) \%>\%
  group_drop(type)

# Remove "type" from the groups and the output data frame
tidyr::table2 \%>\%
  dplyr::group_by(country, year, type) \%>\%
  group_drop(type, .remove_dropped = TRUE)

# Only columns that were dropped from groups will be removed
tidyr::table2 \%>\%
  dplyr::group_by(country, type) \%>\%
  group_drop(year, type, .remove_dropped = TRUE)

# Nothing happens if trying to drop a group that's not in the groups
tidyr::table2 \%>\%
  dplyr::group_by(country, year) \%>\%
  group_drop(type)

}
\seealso{
Other Group Utilities: \code{\link{with_retain_groups}},
  \code{\link{with_ungroup}}
}
\concept{Group Utilities}
